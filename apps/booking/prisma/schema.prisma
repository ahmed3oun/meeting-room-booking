// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  email      String     @unique
  password   String
  name       String
  membership Membership
  bookings   Booking[]
  createdAt  DateTime   @default(now()) @db.Date
  updatedAt  DateTime   @default(now()) @updatedAt @db.Date
}

model Booking {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  startTime DateTime
  endTime   DateTime
  guests    Guest[]
  confirmedGuests String[]
  guestsEmails String[]
  confirmed Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @default(now()) @updatedAt @db.Date
}

model Room {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  size      RoomSize
  premium   Boolean
  bookings  Booking[]
  createdAt DateTime  @default(now()) @db.Date
  updatedAt DateTime  @default(now()) @updatedAt @db.Date
}

model Guest {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  booking   Booking  @relation(fields: [bookingId], references: [id])
  bookingId String   @db.ObjectId
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @default(now()) @updatedAt @db.Date
}

enum RoomSize {
  SMALL
  MEDIUM
  LARGE
}

enum Membership {
  PREMIUM
  REGULAR
}
